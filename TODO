=head1 TODO

=head2 Stuff to do SOON

* use Test::Class


=head2  Stuff to figure out

* check for minimum SWIG version

* how should we interface to gsl_sf_result ?

http://www.gnu.org/software/gsl/manual/html_node/The-gsl_005fsf_005fresult-struct.html

     use Math::GSL::Result;
     use Math::GSL::Sf qw/gsl_sf_bessel/;
     
     my $x = 5.0;
     my $result = Math::GSL::Result->new;
     
     my $expected = -0.17759677131433830434739701;
       
     my $status = gsl_sf_bessel_J0_e ($x, $result);
     
     print "status  = $status\n";
     printf "J0($x) = %.18f\n\t= +/- % .18f\n", $result->val, $result->err;
     printf "exact   = $expected\n;

* $status should get stringified to an actual message (via gsl_strerror)

* same goes for gsl_complex_*, gsl_vector_* 

=head2 Stuff to fix

* make sure in Build.PL that the GSL include files are where we think they
  are, so that the compilation doesn't blowup when people have put there
  headers in a non-standard place

* make the interface files not be hardcoded to /usr/local/include/gsl, possibly
  using an environment variable
